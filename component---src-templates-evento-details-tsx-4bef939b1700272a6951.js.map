{"version":3,"file":"component---src-templates-evento-details-tsx-4bef939b1700272a6951.js","mappings":"kNACWA,EAAY,mCACZC,EAAQ,+BACRC,EAAU,iCACVC,EAAQ,+B,oBCEJ,SAASC,EAAc,GAAe,IAAf,KAAEC,GAAW,EACjD,MAAMC,EAAYD,EAAKE,eAAeC,YAAYC,WAC5CC,EAAaL,EAAKM,cAAcC,MAAMC,QACzCC,GAAcA,EAAKC,MAAMC,eAAiBV,IAC3C,GAAGS,MAKL,OAHAE,QAAQC,IAAIb,GAIVc,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,MAAAA,CAAKE,UAAWC,GACdH,EAAAA,cAAAA,KAAAA,CAAIE,UAAWC,GAAejB,EAAKE,eAAeC,YAAYe,YAC9DJ,EAAAA,cAAAA,MAAAA,CAAKE,UAAWC,GACdH,EAAAA,cAACK,EAAAA,EAAG,CAACT,MAAOL,KAEdS,EAAAA,cAAAA,MAAAA,CAAKE,UAAWC,EAAgBG,wBAAyB,CAAEC,OAAQrB,EAAKE,eAAeoB,QACvFR,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,cAAe,WAI7D,C","sources":["webpack://gatsby-starter-hello-world/./src/templates/details.module.css","webpack://gatsby-starter-hello-world/./src/templates/evento-details.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"details-module--container--a1c0e\";\nexport var cover = \"details-module--cover--804d4\";\nexport var details = \"details-module--details--4af8a\";\nexport var title = \"details-module--title--71747\";","import React from 'react'\nimport Layout from '../components/Layout'\nimport * as styles from './details.module.css'\nimport Img from 'gatsby-image'\nimport { Link, graphql } from 'gatsby'\n\nexport default function EventoDetails({ data }: any) {\n  const coverName = data.markdownRemark.frontmatter.eventCover\n  const coverFluid = data.allImageSharp.nodes.filter(\n    (node: any) => node.fluid.originalName === coverName\n  )[0].fluid\n\n  console.log(data);\n  \n\n  return (\n    <Layout>\n      <div className={styles.container}>\n        <h1 className={styles.title}>{data.markdownRemark.frontmatter.eventTitle}</h1>\n        <div className={styles.cover}>\n          <Img fluid={coverFluid} />\n        </div>\n        <div className={styles.details} dangerouslySetInnerHTML={{ __html: data.markdownRemark.html}} />\n        <Link to='/' style={{ textDecoration: 'underline' }}>Voltar</Link>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query EventDetailQuery($eventSlug: String) {\n    markdownRemark(frontmatter: { eventSlug: { eq: $eventSlug } }) {\n      frontmatter {\n        eventSlug\n        eventCover\n        eventDate\n        eventTitle\n      }\n      html\n    }\n    allImageSharp {\n      nodes {\n        fluid {\n          originalName\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"names":["container","cover","details","title","EventoDetails","data","coverName","markdownRemark","frontmatter","eventCover","coverFluid","allImageSharp","nodes","filter","node","fluid","originalName","console","log","React","Layout","className","styles","eventTitle","Img","dangerouslySetInnerHTML","__html","html","Link","to","style","textDecoration"],"sourceRoot":""}